version: '3'
services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: app
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
        networks:
            - thor

    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www/html
            - .//config/nginx/default.conf/:/etc/nginx/conf.d/default.conf
        networks:
            - thor

    pgsql:
        image: postgres:14.1-alpine
        restart: always
        environment:
            POSTGRES_DB: thor
            POSTGRES_USER: thor
            POSTGRES_PASSWORD: thor
        ports:
            - '5432:5432'
        networks:
            - thor
        volumes: 
            - 'thor-pgsql:/var/lib/postgresql/data'
    
    pgadmin:
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: "thor@example.com"
            PGADMIN_DEFAULT_PASSWORD: "thor"
        ports:
            - "16543:80"
        depends_on:
            - pgsql
        networks:
            - thor

    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        networks:
            - thor

    kafka:
        image: confluentinc/cp-kafka:latest
        depends_on:
            - zookeeper
        ports:
            - 9092:9092
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        restart: always
        networks:
            - thor

    kafdrop:
        image: obsidiandynamics/kafdrop:latest
        depends_on:
            - kafka
        ports:
            - 19000:9000
        environment:
            KAFKA_BROKERCONNECT: kafka:29092
        networks:
            - thor

networks:
    thor:
        driver: bridge
volumes:
    thor-pgsql:
        driver: local
    